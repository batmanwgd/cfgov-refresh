[tox]
skipsdist=True
# Temporarily disabling this to deliberately support conflicting versions
# wagtail==1.13.3 with django-modelcluster==4.4.
# tox_pip_extensions_ext_venv_update=True
# Run these envs when tox is invoked without -e
envlist=lint-py{36}, unittest-py{36}-current-slow


[testenv]
# Factored envs for running most things. Configuration of individual
# factors like lint and unittest is done in their respective configuration 
# sections below. Additional conveniently-named test envs exist that will use
# envdirs and other aspects of the factored envs configured here.
#
# Factors:
#   lint:       Lint Python files with flake8 and isort
#   unittest:   Run Python unittests
#   acceptance: Run a Django server and acceptance tests
#   py36:       Use Python 3.6
#   current:    Use our currently pinned versions of Django and Wagtail
#   next:       Use upcoming versions of Django and Wagtail
#
# These factors are expected to combine into the follow generative environments:
#
#   lint-py{36}
#   unittest-py{36}-{current,next}-{fast,slow}
#   acceptance-py{36}-{current}-fast
#
# These factors are expected to combine to be invoked with:
#
#   tox -e lint-py36
#   tox -e unittest-py36-current-fast
#   tox -e unittest-py36-current-slow
#   tox -e unittest-py36-next-fast
#   tox -e unittest-py36-next-slow

recreate=False

whitelist_externals=echo

changedir=
    unittest:   {[unittest]changedir}
    acceptance: {[acceptance]changedir}

basepython=
    py36: python3.6

deps=
    current:    {[current]deps}
    next:       {[next]deps}
    lint:       {[lint]deps}
    unittest:   {[unittest]deps}
    acceptance: {[acceptance]deps}

passenv=
    unittest:   {[unittest]passenv}
    acceptance: {[acceptance]passenv}

setenv=
    fast:       {[fast]setenv}
    slow:       {[slow]setenv}
    unittest:   {[unittest]setenv}
    acceptance: {[acceptance]setenv}

commands=
    lint:       {[lint]commands}
    py36-slow:  {[missing-migrations]commands}
    unittest:   {[unittest]commands}
    acceptance: {[acceptance]commands}


[lint]
# Configuration values necessary to lint Python files.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e lint-py{36}
#
# To run Python linting.
deps=
    flake8
    isort
commands=
    flake8
    isort --check-only --diff --recursive cfgov


[current]
# Configuration values necessary to use the currently pinned versions of 
# Django and Wagtail
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{36}-current-{fast,slow}
#
# To run unit tests.
deps=
    -r{toxinidir}/requirements/django.txt
    -r{toxinidir}/requirements/wagtail.txt


[next]
# Configuration values necessary to use upcoming versions of Django and 
# Wagtail
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{36}-next-{fast,slow}
#
# To run unit tests.
deps=
#    Django>=2.0,<2.1
    Django>=1.11,<2.0
    wagtail>=2.0,<2.4


[unittest]
# Configuration values necessary to run unittests.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{36}-{current,next}-{fast,slow}
#
# To run unit tests.
changedir=
    {toxinidir}/cfgov
passenv=
    TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH TEST_DATABASE_URL TEST_RUNNER
# Set DJANGO_SETTINGS_MODULE based on {with,no}-migrations
setenv=
    GOVDELIVERY_ACCOUNT_CODE=fake_account_code
    DJANGO_ADMIN_USERNAME=admin
    DJANGO_ADMIN_PASSWORD=admin
    LANG=en_US.UTF-8
    LC_ALL=en_US.UTF-8
    WAGTAIL_SHARING_HOSTNAME=content.localhost
deps=
    -r{toxinidir}/requirements/libraries.txt
    -r{toxinidir}/requirements/test.txt
commands=
    coverage erase
    coverage run --source='.' manage.py test {posargs}


[fast]
# Configuration values necessary to run unittests without migrations.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{36}-{current,next}-fast
#
# To run unit tests.
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.test_nomigrations


[slow]
# Configuration values necessary to run unittests with migrations.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   tox -e unittest-py{36}-{current,next}-slow
#
# To run unit tests.
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.test


[missing-migrations]
# Extra configuration values used as part of slow environments.
#
# When running on Travis, we want to verify that Django migrations are
# up-to-date. But we don't want to do that when running tox locally. We
# accomplish this by having Travis set the TRAVIS_CHECK_MIGRATIONS
# environment variable with the check migrations command.
#
# When not running on Travis, we want this to be a noop.
commands=
    {env:TRAVIS_CHECK_MIGRATIONS:echo "Skipping Travis-only step"}


[acceptance]
# Configuration values necessary to run acceptance tests using same
# virtualenv as backend tests.
# Note: This is not an env will not run if invoked. Use an invocation of:
#
#   acceptance-py{36}-{current}-fast
#
# To run acceptance tests.
changedir=
    {[unittest]changedir}
deps=
    {[current]deps}
    {[unittest]deps}
passenv=
    USER
    DISPLAY
    SAUCE_USERNAME
    SAUCE_ACCESS_KEY
    SAUCE_SELENIUM_URL
    SAUCE_TUNNEL
    TRAVIS
setenv=
    DJANGO_LIVE_TEST_SERVER_ADDRESS=localhost:9000-9010
    DJANGO_SETTINGS_MODULE=cfgov.settings.test_acceptance
commands=
    ./manage.py test {posargs}


## Standalone and past-friendly envs


[testenv:lint]
# Conveniently-named test env for linting
# Invoke with: tox -e lint
# This should run identically to tox -e lint-py36
recreate=False
basepython=python3.6
envdir={toxworkdir}/lint-py36
deps={[lint]deps}
commands={[lint]commands}


[testenv:fast]
# Conveniently-named test env for testing without migrations
# Invoke with: tox -e fast
# This should run identically to tox -e unittest-py36-current-fast
recreate=False
changedir={[unittest]changedir}
basepython=python3.6
envdir={toxworkdir}/unittest-py36-current-fast
deps=
    {[current]deps}
    {[unittest]deps}
setenv=
    {[fast]setenv}
    {[unittest]setenv}
commands={[unittest]commands}


[testenv:next]
# Conveniently-named test env for testing with upcoming versions of Django 
# and Wagtail
# Invoke with: tox -e next
# This should run identically to tox -e unittest-py36-next-slow
recreate=False
changedir={[unittest]changedir}
basepython=python3.6
envdir={toxworkdir}/unittest-py36-next-slow
deps=
    {[next]deps}
    {[unittest]deps}
setenv=
    {[slow]setenv}
    {[unittest]setenv}
commands={[unittest]commands}


[testenv:acceptance]
recreate=False
changedir={[acceptance]changedir}
basepython=python3.6
envdir={toxworkdir}/acceptance-py36-current
deps=
    -r{toxinidir}/requirements/django.txt
    -r{toxinidir}/requirements/wagtail.txt
    {[acceptance]deps}
passenv={[acceptance]passenv}
setenv=
    acceptance: {[acceptance]setenv}
    LANG=en_US.UTF-8
    LC_ALL=en_US.UTF-8
commands={[acceptance]commands}


[testenv:validate-assets]
# Invoke with: tox -e validate-assets
# Ensure all assets are generated without error.
recreate=False
changedir={toxinidir}
basepython=python3.6
deps=-r{toxinidir}/requirements/base.txt
setenv=
    DJANGO_SETTINGS_MODULE=cfgov.settings.production
    DJANGO_STATIC_ROOT={toxinidir}/collectstatic
    ALLOWED_HOSTS=["*"]
commands=
    {toxinidir}/frontend.sh production
    {toxinidir}/cfgov/manage.py collectstatic --noinput
